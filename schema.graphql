type Query {
    users: [User!]!
    networks: [Network!]!
}

type Mutation {
    addUser(data: CreateUserInput!): User!
    login(data: LoginInput!): LoginOutput!
    addNetwork(data: NetworkInput!): Network!
}


input CreateUserInput {
    name: String!
    email: String!
    password: String!
}

input LoginInput {
    email: String!
    password: String!
}

input NetworkInput {
    geoJSON: String!
}

type LoginOutput{
    success: Boolean!
    msg: String!
    token: String
    user: User
}

type User{
    _id: String!
    name: String!
    email: String!
    networkId: String
}

type Network{
    _id: String!
    data: String!
}